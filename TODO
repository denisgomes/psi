========
Releases
========

0.1.0
=====

Supports
--------
*Debug inclined supports
*Make imposed support displacment opercase dependent (solver.py)
*Refactor support.py, change GlobalX to X, etc
*Implement spring supports and refactor supports.py
*Update support apply method
*Implement fglobal for supports.
*Implement support displacement.
*Fix LineStop and Guide Supports directions. Support direction cosine, function
or property?
*Should supports have element reference?
*Guide support should be pointed in the vertical direction.
*Add support gaps

Elements
--------
*Implement bend and reducer element type
*Implement all other elements types
*Implement sifs for various components, especially for tees
*Implement tee flexibility at the intersection node (see Code below)
*Remove dependence on topology.py

Code
----
1. Flex and SIF for reducer, bend and tee.
2. Tee flexibility is applied only at the tee node, thus will alter the tee
DOFs only in the stiffness matrix.

Loads
-----
*Fix thermal load internal force reaction report, should be 0 if not restrained
axially
*Distinguish betweeen Nodal displacement (loads.Displacement). Be able to
apply a displacement to a support.

Loadcase
--------
*Update automatic default loadcase method
*Include loadcases for spring hanger design

Settings
--------
*Implement axial force setting
*Implement stress case corroded setting

Solver
------
1. Implement support prescribed displacement for nonlinear suppports.
2. Refactor with fglobal for supports.
3  Allow for support gaps.

Tests
-----
*Test loads
*Test supports
*Test piping components

Docs
----
*Add to user guide
*Add to application guide
*Add to V&V

Website
-------
*Convert website to pipe stress blog with github comments
*Add working donate button (github sponsors)


Future
======
*Non-linear supports (friction)
*Implement bellows
*Refine modal analysis (dynamic.py)
*Implement Response spectra (dynamic.py)
*Implement Time History (dynamic.py)
